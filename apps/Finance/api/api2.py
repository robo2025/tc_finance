from rest_framework.decorators import detail_route, list_routefrom core.decorator.response import Core_connectorfrom utils.exceptions import PubErrorCustomfrom apps.Finance.Custom.mixins import (                    GenericViewSetCustom)from apps.Finance.models import (					FReceiptListDetail,					FReceiptList,					FReceipt)from apps.Finance.Custom.serializers import (					NoFRceiptSerializer,					YesFRceiptSerializer,					FReceiptListDetailSerializer,					FReceiptListSerializer,					FReceiptSerializer)from apps.Finance.utils import (					set_receiptl_info,					noticket_query,					yesticket_query,					run_FA_DD_TH)class CommissionTicket(GenericViewSetCustom):	@Core_connector(pagination=True)	def list(self,request):		is_type = self.request.query_params.get('is_type', '3')		if str(is_type)=='1':			return {'data': NoFRceiptSerializer(noticket_query(), many=True).data}		elif str(is_type)=='2':			return {'data': YesFRceiptSerializer(yesticket_query(), many=True).data}		else:		    raise PubErrorCustom("is_type有误！")		@Core_connector()	def retrieve(self,request,*args,**kwargs):		receipt_sn = kwargs.get('pk', None)		if not receipt_sn :			raise PubErrorCustom("发票编号为空！")		if not isinstance(receipt_sn, str):			raise PubErrorCustom("发票编号有误！")		receipt=FReceipt.objects.filter(receipt_sn=receipt_sn, receipt_status=2)		if not receipt.exists():			raise PubErrorCustom("此发票无开票数据！")		return {'data':{			"title":FReceiptSerializer(receipt[0],many=False).data,			'goods_merge':FReceiptListSerializer(FReceiptList.objects.filter(receipt_sn=receipt_sn,status=2),many=True).data,			'goods':FReceiptListDetailSerializer(FReceiptListDetail.objects.filter(receipt_sn=receipt_sn,status=2),many=True).data		}}		@list_route(methods=['PUT'])	@Core_connector(transaction=True)	def ready(self, request):		orders = self.request.data.get('orders', None)		if not orders:			raise PubErrorCustom("订单号为空！")				orders_obj = dict()		obj = noticket_query(" and t1.use_code in %s", [orders])		for item in obj:			item.unit = '台'			item.rest_type = item.goods_sn + item.model			orders_obj[item.use_code] = item		if not orders_obj or len(orders_obj) < len(orders):			raise PubErrorCustom("选择的开票信息有误，请重新选择！")				# obj1=yes_ticket_ready(" and t1.use_code in %s",[orders])		# data=None		# if len(obj1):		# 	obj1.use_code				FA, DD, TH = run_FA_DD_TH(orders)		for obj in FA:			orders_obj[obj.order_code].receipt = obj		for obj in DD:			orders_obj[obj.order_code].receipt = obj		for obj in TH:			orders_obj[obj.order_code].receipt = obj				return {"data": set_receiptl_info(request, orders_obj)}		@list_route(methods=['PUT'])	@Core_connector(transaction=True)	def run(self,request):		receipt_sn = request.data.get('receipt_sn',"")		if not receipt_sn:			raise PubErrorCustom("发票编号为空！")				finance_receipt = FReceipt.objects.filter(receipt_sn=receipt_sn)		if not finance_receipt.exists():			raise PubErrorCustom("该发票编号不存在！")		else:			finance_receipt = finance_receipt.first()			receipt_no = request.data.get('receipt_no', "")			custom = request.data.get('custom', "")			addr = request.data.get('addr', "")			mobile = request.data.get('mobile', "")			img = request.data.get('img', "")			finance_receipt.receipt_status = 2			finance_receipt.receipt_no = receipt_no			if custom:				finance_receipt.custom = custom			if addr:				finance_receipt.addr = addr			if mobile:				finance_receipt.mobile = mobile			if img:				finance_receipt.img = img			finance_receipt.save()		return {"data": []}	class CommissionTicketQuery(GenericViewSetCustom):		@list_route(methods=['GET'])	@Core_connector(pagination=True)	def no(self,request):		return {'data': NoFRceiptSerializer(noticket_query(), many=True).data}		@list_route(methods=['GET'])	@Core_connector(pagination=True)	def yes(self,request):		return {'data': YesFRceiptSerializer(yesticket_query(), many=True).data}